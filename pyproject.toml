[tool.poetry]
name = "bot"
version = "0.1.0"
description = "Cookiecutter template for generic Python 3 project with tooling configuration for testing, linting and IDE support"
authors = ["Li Lin <guru.lin@gmail.com>"]
license = "MIT"

# this section contains all dependencies required to run unit and integration tests
# not just dependencies requied for lambda runtime
[tool.poetry.dependencies]
python = "^3.11"
python-dotenv = "^1.0.0"
openai = {extras = ["embeddings", "wandb"], version = "^0.28.1"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2"
pytest-mock = "^3.10"
pytest-cov = "^4.0"
pytest-dotenv = "^0.5.2"
black = "^22.1.0"
flake8 = "^4.0.1"
flake8-black = "^0.3.3"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.10.0"
flake8-debugger = "^4.1.2"
flake8-fixme = "^1.1.1"
flake8-variables-names = "^0.0.5"
mypy = "1.4.1"
types-setuptools = "^57.4.8"
types-toml = "^0.10.3"
isort = "^5.12.0"
pre-commit = "^3.3.3"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["."]
omit = ["tests/*"]

[tool.mypy]
warn_return_any = false
warn_unused_configs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
mypy_path = "."

[[tool.mypy.overrides]]
module = [
    "dataclasses",
]
ignore_missing_imports = true
